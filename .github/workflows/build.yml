name: Node CI

# Push tests commits; pull_request tests PR merges
on: [push, pull_request]

jobs:

  # Test the build
  build:
    # Setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x ]
        os: [ windows-latest, ubuntu-latest, macOS-latest ]

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v1

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: Install
        run: npm install

      - name: Hydrate
        run: npx arc hydrate
        env:
          CI: true
          ARC_MAX_NPM: 10

      - name: Test
        env:
          CI: true
        run: npm test

      - name: Notify
        uses: homoluctus/slatify@master
        # Only fire alert once; may need `&& matrix.node-version == '12.x' && matrix.os == 'ubuntu-latest'` later
        if: github.ref == 'refs/heads/master' && failure()
        with:
          type: ${{ job.status }}
          job_name: '*Build*'
          url: ${{ secrets.SLACK_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}

  # Assuming all that went fine (and it's master): deploy!
  deploy:
    # Setup
    needs: build
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v1

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm ci

      - name: Deploy to production
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm run deploy --production
        env:
          CI: true
          AWS_REGION: us-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to staging
        run: npm run deploy
        env:
          CI: true
          AWS_REGION: us-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Notify
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Deploy*'
          url: ${{ secrets.SLACK_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
