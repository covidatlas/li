#! /usr/bin/env node
const arc = require('@architect/functions')

const timeseriesRegenerator = require('./src/scheduled/regen-timeseries/index.js').handler
const taskRunner = require('./src/scheduled/runner/index.js').handler

const args = require('./src/cli/args.js')
const checkSandbox = require('./src/cli/check-sandbox.js')
const makeNice = require('./src/cli/make-nice.js')

let { date, utc } = args
let { crawl, scrape, regenerate, regenTimeseries, runner } = makeNice(args)

;(async () => {
  checkSandbox()

  process.env.NODE_ENV = 'testing'

  if (crawl) {
    await arc.events.publish({
      name: 'crawler',
      payload: {
        source: crawl
      }
    })
  }
  if (scrape) {
    await arc.events.publish({
      name: 'scraper',
      payload: {
        date,
        source: scrape,
        _useUTCdate: utc
      }
    })
  }
  if (regenerate) {
    console.log(`⚠️  About to regenerate ${regenerate}, you've got 3 seconds to cancel!`)
    setTimeout(async () => {
      await arc.events.publish({
        name: 'regenerator',
        payload: {
          date,
          source: regenerate
        }
      })
    }, 3000)
  }
  if (regenTimeseries) {
    await timeseriesRegenerator()
  }
  if (runner) {
    await taskRunner()
  }
})()
